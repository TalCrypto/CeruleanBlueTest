/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PrimaryNFT, PrimaryNFTInterface } from "../PrimaryNFT";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "approved",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "ApprovalForAll",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint8",
        name: "version",
        type: "uint8",
      },
    ],
    name: "Initialized",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "burn",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "countingTimestamp",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "getApproved",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "name",
        type: "string",
      },
      {
        internalType: "string",
        name: "symbol",
        type: "string",
      },
      {
        internalType: "string",
        name: "baseTokenURI",
        type: "string",
      },
    ],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
    ],
    name: "isApprovedForAll",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "mint",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "minter",
        type: "address",
      },
    ],
    name: "mintedTimestampOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "ownerOf",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "resetCountingTimestamp",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "_data",
        type: "bytes",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "setApprovalForAll",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
    ],
    name: "tokenByIndex",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
    ],
    name: "tokenOfOwnerByIndex",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "tokenURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "withdrawFunds",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b506122db806100206000396000f3fe6080604052600436106101815760003560e01c8063684dd893116100d1578063a6487c531161008a578063cb70f16511610064578063cb70f16514610430578063deabc1b914610467578063e985e9c51461047d578063f2fde38b146104c657610181565b8063a6487c53146103d0578063b88d4fde146103f0578063c87b56dd1461041057610181565b8063684dd8931461033357806370a0823114610348578063715018a6146103685780638da5cb5b1461037d57806395d89b411461039b578063a22cb465146103b057610181565b806323b872dd1161013e57806342842e0e1161011857806342842e0e146102b357806342966c68146102d35780634f6ccce7146102f35780636352211e1461031357610181565b806323b872dd1461025e57806324600fc31461027e5780632f745c591461029357610181565b806301ffc9a71461018657806306fdde03146101bb578063081812fc146101dd578063095ea7b3146102155780631249c58b1461023757806318160ddd1461023f575b600080fd5b34801561019257600080fd5b506101a66101a1366004611e84565b6104e6565b60405190151581526020015b60405180910390f35b3480156101c757600080fd5b506101d06104f9565b6040516101b29190611ff0565b3480156101e957600080fd5b506101fd6101f8366004611f40565b61058b565b6040516001600160a01b0390911681526020016101b2565b34801561022157600080fd5b50610235610230366004611e5b565b610625565b005b61023561073b565b34801561024b57600080fd5b5060cb545b6040519081526020016101b2565b34801561026a57600080fd5b50610235610279366004611d6d565b61082b565b34801561028a57600080fd5b5061023561085d565b34801561029f57600080fd5b506102506102ae366004611e5b565b610882565b3480156102bf57600080fd5b506102356102ce366004611d6d565b610918565b3480156102df57600080fd5b506102356102ee366004611f40565b610933565b3480156102ff57600080fd5b5061025061030e366004611f40565b6109ad565b34801561031f57600080fd5b506101fd61032e366004611f40565b610a4e565b34801561033f57600080fd5b50610235610ac5565b34801561035457600080fd5b50610250610363366004611d21565b610af6565b34801561037457600080fd5b50610235610b7d565b34801561038957600080fd5b506033546001600160a01b03166101fd565b3480156103a757600080fd5b506101d0610bb1565b3480156103bc57600080fd5b506102356103cb366004611e21565b610bc0565b3480156103dc57600080fd5b506102356103eb366004611ebc565b610bcf565b3480156103fc57600080fd5b5061023561040b366004611da8565b610c66565b34801561041c57600080fd5b506101d061042b366004611f40565b610c98565b34801561043c57600080fd5b5061025061044b366004611d21565b6001600160a01b03166000908152610130602052604090205490565b34801561047357600080fd5b5061012f54610250565b34801561048957600080fd5b506101a6610498366004611d3b565b6001600160a01b039182166000908152609c6020908152604080832093909416825291909152205460ff1690565b3480156104d257600080fd5b506102356104e1366004611d21565b610d73565b60006104f182610e0b565b90505b919050565b606060978054610508906121e3565b80601f0160208091040260200160405190810160405280929190818152602001828054610534906121e3565b80156105815780601f1061055657610100808354040283529160200191610581565b820191906000526020600020905b81548152906001019060200180831161056457829003601f168201915b5050505050905090565b6000818152609960205260408120546001600160a01b03166106095760405162461bcd60e51b815260206004820152602c60248201527f4552433732313a20617070726f76656420717565727920666f72206e6f6e657860448201526b34b9ba32b73a103a37b5b2b760a11b60648201526084015b60405180910390fd5b506000908152609b60205260409020546001600160a01b031690565b600061063082610a4e565b9050806001600160a01b0316836001600160a01b0316141561069e5760405162461bcd60e51b815260206004820152602160248201527f4552433732313a20617070726f76616c20746f2063757272656e74206f776e656044820152603960f91b6064820152608401610600565b336001600160a01b03821614806106ba57506106ba8133610498565b61072c5760405162461bcd60e51b815260206004820152603860248201527f4552433732313a20617070726f76652063616c6c6572206973206e6f74206f7760448201527f6e6572206e6f7220617070726f76656420666f7220616c6c00000000000000006064820152608401610600565b6107368383610e30565b505050565b662386f26fc100003410156107925760405162461bcd60e51b815260206004820152601b60248201527f496e73756666696369656e742066756e647320746f206d696e742e00000000006044820152606401610600565b61012f5461079f3361044b565b11156107f95760405162461bcd60e51b8152602060048201526024808201527f43616e206d696e74206f6e6c79206f6e65204e4654206174207468697320637960448201526331b6329760e11b6064820152608401610600565b3360008181526101306020526040902042905561012d5461081a9190610e9e565b61082961012d80546001019055565b565b610836335b82610fed565b6108525760405162461bcd60e51b8152600401610600906120d8565b6107368383836110e4565b610829476108736033546001600160a01b031690565b6001600160a01b03169061128b565b600061088d83610af6565b82106108ef5760405162461bcd60e51b815260206004820152602b60248201527f455243373231456e756d657261626c653a206f776e657220696e646578206f7560448201526a74206f6620626f756e647360a81b6064820152608401610600565b506001600160a01b0391909116600090815260c960209081526040808320938352929052205490565b61073683838360405180602001604052806000815250610c66565b61093c33610830565b6109a15760405162461bcd60e51b815260206004820152603060248201527f4552433732314275726e61626c653a2063616c6c6572206973206e6f74206f7760448201526f1b995c881b9bdc88185c1c1c9bdd995960821b6064820152608401610600565b6109aa816113a4565b50565b60006109b860cb5490565b8210610a1b5760405162461bcd60e51b815260206004820152602c60248201527f455243373231456e756d657261626c653a20676c6f62616c20696e646578206f60448201526b7574206f6620626f756e647360a01b6064820152608401610600565b60cb8281548110610a3c57634e487b7160e01b600052603260045260246000fd5b90600052602060002001549050919050565b6000818152609960205260408120546001600160a01b0316806104f15760405162461bcd60e51b815260206004820152602960248201527f4552433732313a206f776e657220717565727920666f72206e6f6e657869737460448201526832b73a103a37b5b2b760b91b6064820152608401610600565b6033546001600160a01b03163314610aef5760405162461bcd60e51b8152600401610600906120a3565b4261012f55565b60006001600160a01b038216610b615760405162461bcd60e51b815260206004820152602a60248201527f4552433732313a2062616c616e636520717565727920666f7220746865207a65604482015269726f206164647265737360b01b6064820152608401610600565b506001600160a01b03166000908152609a602052604090205490565b6033546001600160a01b03163314610ba75760405162461bcd60e51b8152600401610600906120a3565b610829600061144c565b606060988054610508906121e3565b610bcb33838361149e565b5050565b6000610bdb600161156d565b90508015610bf3576000805461ff0019166101001790555b610bfd84846115f2565b610c05611640565b8151610c199061012e906020850190611bdc565b508015610c60576000805461ff0019169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15b50505050565b610c703383610fed565b610c8c5760405162461bcd60e51b8152600401610600906120d8565b610c608484848461166f565b6000818152609960205260409020546060906001600160a01b0316610d175760405162461bcd60e51b815260206004820152602f60248201527f4552433732314d657461646174613a2055524920717565727920666f72206e6f60448201526e3732bc34b9ba32b73a103a37b5b2b760891b6064820152608401610600565b6000610d216116a2565b90506000815111610d415760405180602001604052806000815250610d6c565b80610d4b846116b2565b604051602001610d5c929190611f84565b6040516020818303038152906040525b9392505050565b6033546001600160a01b03163314610d9d5760405162461bcd60e51b8152600401610600906120a3565b6001600160a01b038116610e025760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401610600565b6109aa8161144c565b60006001600160e01b0319821663780e9d6360e01b14806104f157506104f1826117cd565b6000818152609b6020526040902080546001600160a01b0319166001600160a01b0384169081179091558190610e6582610a4e565b6001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45050565b6001600160a01b038216610ef45760405162461bcd60e51b815260206004820181905260248201527f4552433732313a206d696e7420746f20746865207a65726f20616464726573736044820152606401610600565b6000818152609960205260409020546001600160a01b031615610f595760405162461bcd60e51b815260206004820152601c60248201527f4552433732313a20746f6b656e20616c7265616479206d696e746564000000006044820152606401610600565b610f656000838361181d565b6001600160a01b0382166000908152609a60205260408120805460019290610f8e908490612174565b909155505060008181526099602052604080822080546001600160a01b0319166001600160a01b03861690811790915590518392907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908290a4610bcb565b6000818152609960205260408120546001600160a01b03166110665760405162461bcd60e51b815260206004820152602c60248201527f4552433732313a206f70657261746f7220717565727920666f72206e6f6e657860448201526b34b9ba32b73a103a37b5b2b760a11b6064820152608401610600565b600061107183610a4e565b9050806001600160a01b0316846001600160a01b031614806110b857506001600160a01b038082166000908152609c602090815260408083209388168352929052205460ff165b806110dc5750836001600160a01b03166110d18461058b565b6001600160a01b0316145b949350505050565b826001600160a01b03166110f782610a4e565b6001600160a01b03161461115b5760405162461bcd60e51b815260206004820152602560248201527f4552433732313a207472616e736665722066726f6d20696e636f72726563742060448201526437bbb732b960d91b6064820152608401610600565b6001600160a01b0382166111bd5760405162461bcd60e51b8152602060048201526024808201527f4552433732313a207472616e7366657220746f20746865207a65726f206164646044820152637265737360e01b6064820152608401610600565b6111c883838361181d565b6111d3600082610e30565b6001600160a01b0383166000908152609a602052604081208054600192906111fc9084906121a0565b90915550506001600160a01b0382166000908152609a6020526040812080546001929061122a908490612174565b909155505060008181526099602052604080822080546001600160a01b0319166001600160a01b0386811691821790925591518493918716917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef91a4610736565b804710156112db5760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a20696e73756666696369656e742062616c616e63650000006044820152606401610600565b6000826001600160a01b03168260405160006040518083038185875af1925050503d8060008114611328576040519150601f19603f3d011682016040523d82523d6000602084013e61132d565b606091505b50509050806107365760405162461bcd60e51b815260206004820152603a60248201527f416464726573733a20756e61626c6520746f2073656e642076616c75652c207260448201527f6563697069656e74206d617920686176652072657665727465640000000000006064820152608401610600565b60006113af82610a4e565b90506113bd8160008461181d565b6113c8600083610e30565b6001600160a01b0381166000908152609a602052604081208054600192906113f19084906121a0565b909155505060008281526099602052604080822080546001600160a01b0319169055518391906001600160a01b038416907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908390a4610bcb565b603380546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b816001600160a01b0316836001600160a01b031614156115005760405162461bcd60e51b815260206004820152601960248201527f4552433732313a20617070726f766520746f2063616c6c6572000000000000006044820152606401610600565b6001600160a01b038381166000818152609c6020908152604080832094871680845294825291829020805460ff191686151590811790915591519182527f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a3505050565b60008054610100900460ff16156115b4578160ff1660011480156115905750303b155b6115ac5760405162461bcd60e51b815260040161060090612055565b5060006104f4565b60005460ff8084169116106115db5760405162461bcd60e51b815260040161060090612055565b506000805460ff191660ff831617905560016104f4565b600054610100900460ff166116195760405162461bcd60e51b815260040161060090612129565b815161162c906097906020850190611bdc565b508051610736906098906020840190611bdc565b600054610100900460ff166116675760405162461bcd60e51b815260040161060090612129565b610829611828565b61167a8484846110e4565b61168684848484611858565b610c605760405162461bcd60e51b815260040161060090612003565b606061012e8054610508906121e3565b6060816116d757506040805180820190915260018152600360fc1b60208201526104f4565b8160005b811561170157806116eb8161221e565b91506116fa9050600a8361218c565b91506116db565b60008167ffffffffffffffff81111561172a57634e487b7160e01b600052604160045260246000fd5b6040519080825280601f01601f191660200182016040528015611754576020820181803683370190505b5090505b84156110dc576117696001836121a0565b9150611776600a86612239565b611781906030612174565b60f81b8183815181106117a457634e487b7160e01b600052603260045260246000fd5b60200101906001600160f81b031916908160001a9053506117c6600a8661218c565b9450611758565b60006001600160e01b031982166380ac58cd60e01b14806117fe57506001600160e01b03198216635b5e139f60e01b145b806104f157506301ffc9a760e01b6001600160e01b03198316146104f1565b610736838383611965565b600054610100900460ff1661184f5760405162461bcd60e51b815260040161060090612129565b6108293361144c565b60006001600160a01b0384163b1561195a57604051630a85bd0160e11b81526001600160a01b0385169063150b7a029061189c903390899088908890600401611fb3565b602060405180830381600087803b1580156118b657600080fd5b505af19250505080156118e6575060408051601f3d908101601f191682019092526118e391810190611ea0565b60015b611940573d808015611914576040519150601f19603f3d011682016040523d82523d6000602084013e611919565b606091505b5080516119385760405162461bcd60e51b815260040161060090612003565b805181602001fd5b6001600160e01b031916630a85bd0160e11b1490506110dc565b506001949350505050565b6001600160a01b0383166119c0576119bb8160cb8054600083815260cc60205260408120829055600182018355919091527fa7ce836d032b2bf62b7e2097a8e0a6d8aeb35405ad15271e96d3b0188a1d06fb0155565b6119e3565b816001600160a01b0316836001600160a01b0316146119e3576119e38382611a22565b6001600160a01b0382166119ff576119fa81611abf565b610736565b826001600160a01b0316826001600160a01b031614610736576107368282611b98565b60006001611a2f84610af6565b611a3991906121a0565b600083815260ca6020526040902054909150808214611a8c576001600160a01b038416600090815260c960209081526040808320858452825280832054848452818420819055835260ca90915290208190555b50600091825260ca602090815260408084208490556001600160a01b03909416835260c981528383209183525290812055565b60cb54600090611ad1906001906121a0565b600083815260cc602052604081205460cb8054939450909284908110611b0757634e487b7160e01b600052603260045260246000fd5b906000526020600020015490508060cb8381548110611b3657634e487b7160e01b600052603260045260246000fd5b600091825260208083209091019290925582815260cc909152604080822084905585825281205560cb805480611b7c57634e487b7160e01b600052603160045260246000fd5b6001900381819060005260206000200160009055905550505050565b6000611ba383610af6565b6001600160a01b03909316600090815260c960209081526040808320868452825280832085905593825260ca9052919091209190915550565b828054611be8906121e3565b90600052602060002090601f016020900481019282611c0a5760008555611c50565b82601f10611c2357805160ff1916838001178555611c50565b82800160010185558215611c50579182015b82811115611c50578251825591602001919060010190611c35565b50611c5c929150611c60565b5090565b5b80821115611c5c5760008155600101611c61565b600067ffffffffffffffff80841115611c9057611c90612279565b604051601f8501601f19908116603f01168101908282118183101715611cb857611cb8612279565b81604052809350858152868686011115611cd157600080fd5b858560208301376000602087830101525050509392505050565b80356001600160a01b03811681146104f457600080fd5b600082601f830112611d12578081fd5b610d6c83833560208501611c75565b600060208284031215611d32578081fd5b610d6c82611ceb565b60008060408385031215611d4d578081fd5b611d5683611ceb565b9150611d6460208401611ceb565b90509250929050565b600080600060608486031215611d81578081fd5b611d8a84611ceb565b9250611d9860208501611ceb565b9150604084013590509250925092565b60008060008060808587031215611dbd578081fd5b611dc685611ceb565b9350611dd460208601611ceb565b925060408501359150606085013567ffffffffffffffff811115611df6578182fd5b8501601f81018713611e06578182fd5b611e1587823560208401611c75565b91505092959194509250565b60008060408385031215611e33578182fd5b611e3c83611ceb565b915060208301358015158114611e50578182fd5b809150509250929050565b60008060408385031215611e6d578182fd5b611e7683611ceb565b946020939093013593505050565b600060208284031215611e95578081fd5b8135610d6c8161228f565b600060208284031215611eb1578081fd5b8151610d6c8161228f565b600080600060608486031215611ed0578283fd5b833567ffffffffffffffff80821115611ee7578485fd5b611ef387838801611d02565b94506020860135915080821115611f08578384fd5b611f1487838801611d02565b93506040860135915080821115611f29578283fd5b50611f3686828701611d02565b9150509250925092565b600060208284031215611f51578081fd5b5035919050565b60008151808452611f708160208601602086016121b7565b601f01601f19169290920160200192915050565b60008351611f968184602088016121b7565b835190830190611faa8183602088016121b7565b01949350505050565b6001600160a01b0385811682528416602082015260408101839052608060608201819052600090611fe690830184611f58565b9695505050505050565b600060208252610d6c6020830184611f58565b60208082526032908201527f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560408201527131b2b4bb32b91034b6b83632b6b2b73a32b960711b606082015260800190565b6020808252602e908201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160408201526d191e481a5b9a5d1a585b1a5e995960921b606082015260800190565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b60208082526031908201527f4552433732313a207472616e736665722063616c6c6572206973206e6f74206f6040820152701ddb995c881b9bdc88185c1c1c9bdd9959607a1b606082015260800190565b6020808252602b908201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960408201526a6e697469616c697a696e6760a81b606082015260800190565b600082198211156121875761218761224d565b500190565b60008261219b5761219b612263565b500490565b6000828210156121b2576121b261224d565b500390565b60005b838110156121d25781810151838201526020016121ba565b83811115610c605750506000910152565b6002810460018216806121f757607f821691505b6020821081141561221857634e487b7160e01b600052602260045260246000fd5b50919050565b60006000198214156122325761223261224d565b5060010190565b60008261224857612248612263565b500690565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052601260045260246000fd5b634e487b7160e01b600052604160045260246000fd5b6001600160e01b0319811681146109aa57600080fdfea26469706673582212204ee0ab01ea29f43cec4981798a0bdedb1f7f0dddd86111c9cb5c5ff1075b0d4964736f6c63430008020033";

export class PrimaryNFT__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<PrimaryNFT> {
    return super.deploy(overrides || {}) as Promise<PrimaryNFT>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): PrimaryNFT {
    return super.attach(address) as PrimaryNFT;
  }
  connect(signer: Signer): PrimaryNFT__factory {
    return super.connect(signer) as PrimaryNFT__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): PrimaryNFTInterface {
    return new utils.Interface(_abi) as PrimaryNFTInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): PrimaryNFT {
    return new Contract(address, _abi, signerOrProvider) as PrimaryNFT;
  }
}
